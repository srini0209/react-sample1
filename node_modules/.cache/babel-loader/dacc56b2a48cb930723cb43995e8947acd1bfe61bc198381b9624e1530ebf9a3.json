{"ast":null,"code":"var _jsxFileName = \"D:\\\\seenivasan\\\\Learn React\\\\react-sample1\\\\src\\\\Content.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./content.css\";\nimport { useState } from \"react\";\nimport { FaTrashAlt } from 'react-icons/fa';\nimport Footer from \"./Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Content = () => {\n  _s();\n  const [count, setCount] = useState(0);\n  function increaseLikeCount() {\n    setCount(like => {\n      return like + 1;\n    });\n  }\n  const [lang, setLang] = useState(\"React\");\n  function changeLang() {\n    setLang(() => selectLang());\n  }\n  function selectLang() {\n    let langs = [\"React\", \"Angular\", \"Vue\"];\n    let randint = Math.floor(Math.random() * 3);\n    return langs[randint];\n  }\n  const [items, setItems] = useState([{\n    id: 1,\n    checked: true,\n    label: \"Task 1\"\n  }, {\n    id: 2,\n    checked: true,\n    label: \"Task 2\"\n  }, {\n    id: 3,\n    checked: false,\n    label: \"Task 3\"\n  }, {\n    id: 4,\n    checked: true,\n    label: \"Task 4\"\n  }]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Learn \", lang]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyleType: 'none'\n        },\n        children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: item.id,\n            type: \"checkbox\",\n            className: \"mx-2\",\n            checked: item.checked\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: item.id,\n            children: item.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(FaTrashAlt, {\n            className: \"mx-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(Content, \"Yl++27dkiPDH0us0VZYckpqs/Dw=\");\n_c = Content;\nvar _c;\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"names":["React","useState","FaTrashAlt","Footer","jsxDEV","_jsxDEV","Content","_s","count","setCount","increaseLikeCount","like","lang","setLang","changeLang","selectLang","langs","randint","Math","floor","random","items","setItems","id","checked","label","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","listStyleType","map","item","type","for","_c","$RefreshReg$"],"sources":["D:/seenivasan/Learn React/react-sample1/src/Content.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./content.css\";\r\nimport { useState } from \"react\";\r\nimport { FaTrashAlt } from 'react-icons/fa';\r\nimport Footer from \"./Footer\";\r\n\r\nexport const Content = () => {\r\n  const [count, setCount] = useState(0);\r\n  function increaseLikeCount() {\r\n    setCount((like) => {\r\n      return like + 1;\r\n    });\r\n  }\r\n  const [lang, setLang] = useState(\"React\");\r\n  function changeLang() {\r\n    setLang(() => selectLang());\r\n  }\r\n\r\n  function selectLang() {\r\n    let langs = [\"React\", \"Angular\", \"Vue\"];\r\n    let randint = Math.floor(Math.random() * 3);\r\n    return langs[randint];\r\n  }\r\n  const [items, setItems] = useState(\r\n    [\r\n      {\r\n        id: 1,\r\n        checked: true,\r\n        label: \"Task 1\"\r\n      },\r\n      {\r\n        id: 2,\r\n        checked: true,\r\n        label: \"Task 2\"\r\n      },\r\n      {\r\n        id: 3,\r\n        checked: false,\r\n        label: \"Task 3\"\r\n      },\r\n      {\r\n        id: 4,\r\n        checked: true,\r\n        label: \"Task 4\"\r\n      }\r\n    ]\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <p>Learn {lang}</p>\r\n      <div className=\"container\">\r\n        {/* <div className=\"row\">\r\n          <span id=\"changeButton\" className=\"col w-10 m-3\">\r\n            <button onClick={() => changeLang()} className=\"w-100\">Change</button>\r\n          </span>\r\n          <span id=\"likeButton\" className=\"col w-10 m-3\">\r\n            <button onClick={() => increaseLikeCount()} className=\"Like-button w-75\">Like for {lang}</button>\r\n            <span>{count}</span>\r\n          </span>\r\n        </div> */}\r\n        <ul style={{ listStyleType: 'none' }}>\r\n          {items.map((item) => (\r\n            <li>\r\n              <input id={item.id} \r\n                type=\"checkbox\" className=\"mx-2\" checked={item.checked}  >\r\n              </input><label for={item.id}>{item.label}</label>\r\n              <FaTrashAlt className=\"mx-2\" />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}